plugins {
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "4.1.2"
}

version = "0.1"
group = "org.jobrunr.examples"

repositories {
    mavenCentral()
    mavenLocal()
}

micronaut {
    version '4.1.6'
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("org.jobrunr.examples.*")
    }
}

dependencies {
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    runtimeOnly("org.yaml:snakeyaml")

    compileOnly("io.micronaut.openapi:micronaut-openapi-annotations")
    implementation 'io.micronaut:micronaut-http-client'
    implementation 'io.micronaut:micronaut-runtime'
    implementation 'io.micronaut:micronaut-management'
    implementation 'io.micronaut.micrometer:micronaut-micrometer-core'
//    implementation 'org.jobrunr:jobrunr-micronaut-feature:4.0.0'
//    implementation 'org.jobrunr:jobrunr-micronaut-feature:5.2.0'
    implementation 'org.jobrunr:jobrunr-micronaut-feature:6.2.3'

    runtimeOnly 'ch.qos.logback:logback-classic'
    compileOnly 'org.graalvm.nativeimage:svm'

    implementation 'io.micronaut:micronaut-validation'

    testImplementation 'org.awaitility:awaitility'
    testImplementation 'org.assertj:assertj-core'
}


application {
    mainClass.set("org.jobrunr.examples.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}



